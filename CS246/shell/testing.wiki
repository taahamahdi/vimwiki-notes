= SE Topic: Testing =
%% Possible subtopic?

* Essential part of program development
	* Ongoing - begins *before* you start coding
		* Test suites
		* Expected behavior
	* Continues *while* you are coding
* Not the same as debugging - must test first
* Cannot guarantee correctness
	* Unless your program is trivial, can only prove wrongness (not possible to test every input)
* Ideally, the programmer is not the tester (not in CS246)
* No general formula/guideline to follow makes it difficult
	* Psychological barrier - don't want to find out your program is wrong
 
* Types of testing
	* Human testing - humans look over code and find flaws
		* Code inspections/reviews
	* Machine testing - run program on selected inputs, compare with expected output
	* Black/white/grey box testing - no/full/some knowledge about the program implementation
		* Start with black box, then supplement with white box
			* Various classes of input - numeric ranges, positive vs. negative
			* Boundaries of valid data ranges *(edge cases)*
			* Multiple simultaneous boundaries *(corner cases)*
			* Intuition/experience - guess likely errors
			* Extreme cases (within reason)
		* White box testing
			* Execute all logical paths through the program
			* Make sure every function runs
		* *DO NOT TEST* invalid input, unless a behavior has been described
			* If input is invalid, there is no corresponding correct output, so any such test case would be meaningless
	* Regression testing - make sure new changes to the program don't break only test cases
		* Formalize test suites with testing scripts
			* Always add tests, never subtract
